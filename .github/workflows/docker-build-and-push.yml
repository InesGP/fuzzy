name: Docker build Python and push

on:
  pull_request:
    branches: [ master, 'releases/**' ]
  push:
    branches: [ master, 'releases/**' ]

jobs:
  lapack:
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: verificarlo/fuzzy:v0.4.1-lapack
      DOCKER_FILE: ./docker/base/Dockerfile.ubuntu20.04-lapack
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Check for Dockerfile changes
        id: changes
        run: echo "::set-output name=changed_files::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }})"
      - name: Print changed files
        run : echo " ${{ steps.changes.outputs.changed_files }}"
      - name: Cancel upstream jobs
        if: contains(steps.changed_files.outputs.changed_files, 'docker')
        uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Build and push
        if: contains(steps.changed_files.outputs.changed_files, 'docker')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: env.DOCKER_FILE
          push: true
          tags: env.DOCKER_IMAGE
          cache-from: env.DOCKER_IMAGE
      - name: Image digest
        if: contains(steps.changed_files.outputs.changed_files, './docker')
        run: echo ${{ steps.docker_build.outputs.digest }}

  python:
    needs: lapack
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: verificarlo/fuzzy:v0.4.1-lapack-python3.8.5
      DOCKER_FILE: ./docker/level1/Dockerfile.ubuntu20.04-python
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Verify that Dockerfiles have changed
        uses: tj-actions/verify-changed-files@v5.5
        id: changed_files
        with:
          files: docker
      - name: Build and push
        if: contains(steps.changed_files.outputs.changed_files, './docker')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: env.DOCKER_FILE
          tags: env.DOCKER_IMAGE
          push: true
          cache-from: env.DOCKER_IMAGE
      - name: Image digest
        if: contains(steps.changed_files.outputs.changed_files, './docker')
        run: echo ${{ steps.docker_build.outputs.digest }}

  numpy:
    needs: python
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: verificarlo/fuzzy:v0.4.1-lapack-python3.8.5-numpy
      DOCKER_FILE: ./docker/level2/Dockerfile.ubuntu20.04-python-numpy
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Verify that Dockerfiles have changed
        uses: tj-actions/verify-changed-files@v5.5
        id: changed_files
        with:
          files: docker
      - name: Build and push
        if: contains(steps.changed_files.outputs.changed_files, './docker')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: env.DOCKER_FILE
          tags: env.DOCKER_IMAGE
          push: true
          cache-from: env.DOCKER_IMAGE
      - name: Image digest
        if: contains(steps.changed_files.outputs.changed_files, './docker')
        run: echo ${{ steps.docker_build.outputs.digest }}

  scipy:
    needs: numpy
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: verificarlo/fuzzy:v0.4.1-lapack-python3.8.5-numpy-scipy
      DOCKER_FILE: ./docker/level3/Dockerfile.ubuntu20.04-python-numpy-scipy
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Verify that Dockerfiles have changed
        uses: tj-actions/verify-changed-files@v5.5
        id: changed_files
        with:
          files: docker
      - name: Build and push
        if: contains(steps.changed_files.outputs.changed_files, './docker')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: env.DOCKER_FILE
          tags: env.DOCKER_IMAGE
          push: true
          cache-from: env.DOCKER_IMAGE
      - name: Image digest
        if: contains(steps.changed_files.outputs.changed_files, './docker')
        run: echo ${{ steps.docker_build.outputs.digest }}

  sklearn:
    needs: scipy
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: verificarlo/fuzzy:v0.4.1-lapack-python3.8.5-numpy-scipy-sklearn
      DOCKER_FILE: ./docker/level4/Dockerfile.ubuntu20.04-python-numpy-scipy-sklearn
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Verify that Dockerfiles have changed
        uses: tj-actions/verify-changed-files@v5.5
        id: changed_files
        with:
          files: docker
      - name: Build and push
        if: contains(steps.changed_files.outputs.changed_files, './docker')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: env.DOCKER_FILE
          tags: env.DOCKER_IMAGE
          push: true
          cache-from: env.DOCKER_IMAGE
      - name: Image digest
        if: contains(steps.changed_files.outputs.changed_files, './docker')
        run: echo ${{ steps.docker_build.outputs.digest }}

