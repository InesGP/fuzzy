name: docker build with cache

on:
  pull_request:
    branches: [ master, 'releases/**' ]
  push:
    branches: [ master, 'releases/**' ]

jobs:
  lapack:
    runs-on: ubuntu-20.04
    steps:
      # Check out code
      - name: Checkout
        uses: actions/checkout@v2
      # This is the a separate action that sets up buildx runner
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      # And make it available for the builds
      -
        name: Pull previous build
        run: docker pull verificarlo/fuzzy:v0.4.1-lapack
        continue-on-error: true
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./fuzzy/docker/base/Dockerfile.ubuntu20.04-lapack
          push: true
          tags: verificarlo/fuzzy:v0.4.1-lapack
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
        # This ugly bit is necessary if you don't want your cache to grow forever
        # till it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
